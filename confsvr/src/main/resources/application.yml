#
#   This is the core configuration for service.  I have two examples here:
#
#       -  A configuration service which completelty loads the configuration for the services
#          from the local file server of the config service.  This should only be used for
#          demonstration purposes or for a small application with a limited number of services.
#
#       -  A configuraton service that uses a git-based repository to read the files from
#


####################################
server:
  port: 8888
spring:
  cloud:
    config:
#      discovery:
#        enabled: true
      server:
        encrypt.enabled: false
        git:
          uri: https://github.com/chainyhorn/config-repo.git
          searchPaths: licensingservice,organizationservice,specialroutesservice,zuulservice,authenticationservice
          username: chainyhorn
          password: abc123def456
#eureka:
#  instance:
#    prefer-ip-address: true
#  client:
#    register-with-eureka: true
##    fetch-registry: true
#    service-url:
#      defaultZone: http://localhost:8761/eureka/

#Setting logging levels
logging:
  level:
    com.netflix: WARN
    org.springframework.web: WARN
    com.thoughtmechanix: DEBUG


####
#Classpath and file-based solution
####

#server:
#   port: 8888
#spring:
#  profiles:
#    active: native
#  cloud:
#     config:
#       server:
#           native:
#              searchLocations: file://<chapter 3>/confsvr/src/main/resources/config/licensingservice,
#                               file://<chapter 3>confsvr/src/main/resources/config/organizationservice
##              #searchLocations: classpath:config/,classpath:config/licensingservice
